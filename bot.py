import telebot
import time
from telebot import types
from database import SQL
from users import Seeker, Offerer
import photos

token = "1012837410:AAFY0lxwBFgWPIbRO-lO_MumXnlYJl-1ReQ"
bot = telebot.TeleBot(token)
db = SQL()
mode = 0
flat_id = 1
cur_flat = 0
cur_profile = 0
seeker = Seeker()
offerer = Offerer()
flat_matches = ""
flat_profiles = ""

flat_profile_st = False
seeker_st = False
sleep_places_st = False
offerer_st = False

@bot.message_handler(commands = ['start'])
def start(message):
	keyboard = types.ReplyKeyboardMarkup(True, True)
	keyboard.row('üìã–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ')
	bot.send_message(message.chat.id, 'roomba - H–∞–π–¥–∏ —Ç–æ–≥–æ —Å–∞–º–æ–≥–æ —Å–æ—Å–µ–¥–∞!\n\n'
	'@rroomba —ç—Ç–æ:\n\n'
	'- –ø–æ–∏—Å–∫ —Å–æ—Å–µ–¥–µ–π –ø–æ –∏–Ω—Ç–µ—Ä–µ—Å–∞–º\n'
	'- –∞—Ä–µ–Ω–¥–∞ –∫–æ–º–Ω–∞—Ç/–∫–≤–∞—Ä—Ç–∏—Ä\n'
	'- –≤–∑—è—Ç—å –Ω–∞ –ø–æ–¥—Å–µ–ª–µ–Ω–∏–µ\n'
	'- –ø–æ–∏—Å–∫ –∫–æ–º–ø–∞–Ω—å–æ–Ω–∞ –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–Ω–æ–π –∞—Ä–µ–Ω–¥—ã\n\n'
	'–°–æ—Å–µ–¥—Å—Ç–≤–æ –≤ —Å—Ç–∏–ª–µ "–†—É–º–±–∞"!\n\n'
	'–î–ª—è –ø–æ–¥–∞—á–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏—è –ø–∏—à–∏—Ç–µ –Ω–∞: @rroomba_info\n'
	'–ü—Ä–∞–≤–∏–ª–∞ —Ä–∞–∑–º–µ—â–µ–Ω–∏—è –ø–æ —Å—Å—ã–ª–∫–µ: @rroomba_rules\n\n', reply_markup=keyboard)

@bot.callback_query_handler(func=lambda call:True)
def callback(call):
	global mode, seeker_st, offerer_st, flat_id, flat_profile_st, flat_matches, cur_flat, sleep_places_st, cur_profile, flat_profiles
	if call.message:
		if call.data == 'flat_out' or call.data == 'flat_prev':
			bot.delete_message(call.message.chat.id, call.message.message_id)
			if call.data == 'flat_prev':
				flat_id -= 2
			flat = db.flat_out(flat_id)
			flat_id += 1
			keyboard = types.InlineKeyboardMarkup()
			if flat_id <= db.flat_num():
				button = types.InlineKeyboardButton('–°–ª–µ–¥—É—é—â–∞—è –∫–≤–∞—Ä—Ç–∏—Ä–∞ >>', callback_data = 'flat_out')
				keyboard.add(button)
			if flat_id > 2:
				button = types.InlineKeyboardButton('<< –ü—Ä–µ–¥—ã–¥—É—â–∞—è –∫–≤–∞—Ä—Ç–∏—Ä–∞', callback_data = 'flat_prev')
				keyboard.add(button)
			bot.send_message(call.message.chat.id, '*–†–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ –∫–≤–∞—Ä—Ç–∏—Ä—ã:* '+ flat[1] + ' —Ä–∞–π–æ–Ω, ' + flat[2] + '\n' + \
			 '*–¶–µ–Ω–∞ –∞—Ä–µ–Ω–¥—ã:* '+ str(flat[3]) + '\n' + '*–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–º–Ω–∞—Ç:* ' + str(flat[4]) + '\n' + \
			 '*–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ø–∞–ª—å–Ω—ã—Ö –º–µ—Å—Ç:* ' + str(flat[5]) + '\n' + '*–û–ø–∏—Å–∞–Ω–∏–µ:* '+ flat[6] + '\n' + \
			 '*–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:* ' + flat[7], reply_markup = keyboard, parse_mode = 'Markdown')
		elif call.data == 'matches_out' or call.data == 'matches_out_prev':
			flat_profile_st = False
			bot.delete_message(call.message.chat.id, call.message.message_id)
			if call.data == 'matches_out_prev':
				cur_flat -= 2
			flat = flat_matches[cur_flat]
			cur_flat += 1
			keyboard = types.InlineKeyboardMarkup()
			if flat[9] > 0:
				button = types.InlineKeyboardButton('–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–æ—Ñ–∏–ª–∏ —Å–æ—Å–µ–¥–µ–π', callback_data = 'book_profiles')
				keyboard.add(button)
			book_st = db.check_book(call.message.chat.id, flat_matches[cur_flat-1][0])
			if book_st == False:
				button = types.InlineKeyboardButton('–ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å –∫–≤–∞—Ä—Ç–∏—Ä—É', callback_data = 'book_flat')
				keyboard.add(button)
			if cur_flat + 1 <= len(flat_matches):
				button = types.InlineKeyboardButton('–°–ª–µ–¥—É—é—â–∞—è –∫–≤–∞—Ä—Ç–∏—Ä–∞ >>', callback_data = 'matches_out')
				keyboard.add(button)
			if cur_flat > 1:
				button = types.InlineKeyboardButton('<< –ü—Ä–µ–¥—ã–¥—É—â–∞—è –∫–≤–∞—Ä—Ç–∏—Ä–∞', callback_data = 'matches_out_prev')
				keyboard.add(button)
			cap = '*–†–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ –∫–≤–∞—Ä—Ç–∏—Ä—ã:* '+ flat[1] + ' —Ä–∞–π–æ–Ω, ' + flat[2] + '\n' + \
			 '*–¶–µ–Ω–∞ –∞—Ä–µ–Ω–¥—ã:* '+ str(flat[3]) + '\n' + '*–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–º–Ω–∞—Ç:* ' + str(flat[4]) + '\n' + \
			 '*–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ø–∞–ª—å–Ω—ã—Ö –º–µ—Å—Ç:* ' + str(flat[5]) + '\n' + '*–°—Ç–æ–∏–º–æ—Å—Ç—å –∞—Ä–µ–Ω–¥—ã –Ω–∞ –æ–¥–Ω–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞:*' + str(flat[6]) + \
			 '\n' + '*–û–ø–∏—Å–∞–Ω–∏–µ:* '+ flat[7] + '\n' + '*–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:* ' + flat[8] + '\n' + '*–ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–ª–∏* ' + str(flat[9]) + ' *—á–µ–ª–æ–≤–µ–∫*'
			photo_id = db.get_flat_photo_file_id(flat_matches[cur_flat-1][0])
			if photo_id[0][0] == '0':
				bot.send_message(call.message.chat.id, cap, reply_markup = keyboard, parse_mode = 'Markdown')
			else: 
				photo = 'https://drive.google.com/file/d/'+str(photo_id[0][0])+'/view?usp=sharing'
				bot.send_photo(call.message.chat.id, photo, caption = cap, reply_markup = keyboard, parse_mode = 'Markdown')
		elif call.data == 'book_flat':
			db.book_flat(call.message.chat.id, flat_matches[cur_flat-1][0])
			if flat_matches[cur_flat-1][9] == 0:
				bot.send_message(flat_matches[cur_flat-1][11], '–í–∞—à–∞ –∫–≤–∞—Ä—Ç–∏—Ä–∞ –±—ã–ª–∞ –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∞ –æ–¥–Ω–∏–º —á–µ–ª–æ–≤–µ–∫–æ–º!')
			else:
				bot.send_message(flat_matches[cur_flat-1][11], '–í–∞—à–∞ –∫–≤–∞—Ä—Ç–∏—Ä–∞ –±—ã–ª–∞ –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∞ –µ—â–µ –æ–¥–Ω–∏–º —á–µ–ª–æ–≤–µ–∫–æ–º!')
			bot.send_message(call.message.chat.id, '–ö–≤–∞—Ä—Ç–∏—Ä–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∞!')
		elif call.data == 'book_profiles' or call.data == 'book_profiles_prev':
			if not flat_profile_st: 
				flat_profiles = db.get_flat_profiles(flat_matches[cur_flat-1][0])
				cur_flat -= 1
				cur_profile = 0
				flat_profile_st = True
			bot.delete_message(call.message.chat.id, call.message.message_id)
			if call.data == 'book_profiles_prev':
				cur_profile -= 2
			profile = db.get_profile_by_id(flat_profiles[cur_profile])
			cur_profile += 1
			keyboard = types.InlineKeyboardMarkup()
			button = types.InlineKeyboardButton('–ù–∞–∑–∞–¥ –∫ –æ–±—ä—è–≤–ª–µ–Ω–∏—é', callback_data = 'matches_out')
			keyboard.add(button)
			if cur_profile + 1 <= len(flat_profiles) - 1:
				button = types.InlineKeyboardButton('–°–ª–µ–¥—É—é—â–∏–π –ø—Ä–æ—Ñ–∏–ª—å >>', callback_data = 'book_profiles')
				keyboard.add(button)
			if cur_profile > 1:
				button = types.InlineKeyboardButton('<< –ü—Ä–µ–¥—ã–¥—É—â–∏–π –ø—Ä–æ—Ñ–∏–ª—å', callback_data = 'book_profiles_prev')
				keyboard.add(button)
			if profile[2] > 1000:
				age = str(int(profile[2]/100)) + '-' + str(profile[2]%100)
			else:
				age = profile[2]
			if profile[5] == 'student':
				work = '—Å—Ç—É–¥–µ–Ω—Ç'
			else:
				work = '—Ä–∞–±–æ—Ç–Ω–∏–∫'
			cap = '*–ò–º—è:* '+ profile[1] + '\n' + '*–í–æ–∑—Ä–∞—Å—Ç:* ' + str(age) + '\n' + \
			 '*–û—Ç–∫—É–¥–∞ —Ä–æ–¥–æ–º: * '+ profile[3] + '\n' + '*–ü–æ–ª:* ' + profile[4] + '\n' + \
			 '*–†–∞–±–æ—Ç–Ω–∏–∫ –∏–ª–∏ —Å—Ç—É–¥–µ–Ω—Ç:* ' + work + '\n' + '*–ú–µ—Å—Ç–æ:*' + profile[6] + \
			 '\n' + '*–†–µ–∂–∏–º —Å–Ω–∞:* '+ profile[7] + '\n' + '*–Ø–∑—ã–∫–∏:* ' + profile[8] + '\n' + '*–û —Å–µ–±–µ: * ' + profile[13]
			photo_id = db.get_profile_photo(profile[0])
			if photo_id[0][0] == '0':
				bot.send_message(call.message.chat.id, cap, reply_markup = keyboard, parse_mode = 'Markdown')
			else: 
				photo = 'https://drive.google.com/file/d/'+str(photo_id[0][0])+'/view?usp=sharing'
				bot.send_photo(call.message.chat.id, photo, caption = cap, reply_markup = keyboard, parse_mode = 'Markdown')
		elif call.data == 'seeker_delete_true':
			db.seeker_delete(str(call.message.chat.id))
			bot.send_message(call.message.chat.id, '–í–∞—à–∞ –∞–Ω–∫–µ—Ç–∞ —É–¥–∞–ª–µ–Ω–∞')

@bot.message_handler(content_types = ['text'])
def name_insert_data(message):
	global seeker, mode, seeker_st, offerer_st, flat_matches, cur_flat, sleep_places_st
	if message.text == 'üìã–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ':
		keyboard = types.ReplyKeyboardMarkup(True, True)
		keyboard.row('üë§–ò—â—É —Å–æ—Å–µ–¥–µ–π','üè†–ü—Ä–µ–¥–ª–∞–≥–∞—é –∂–∏–ª—å–µ')
		keyboard.row('üîô–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é')
		bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ —á—Ç–æ-—Ç–æ –æ–¥–Ω–æ:\n1.üë§–ò—â—É —Å–æ—Å–µ–¥–µ–π\n2.üè†–ü—Ä–µ–¥–ª–∞–≥–∞—é –∂–∏–ª—å–µ', reply_markup = keyboard)
	elif message.text == 'üîô–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é':
		seeker_st = offerer_st = sleep_places_st = mode = 0
		keyboard = types.ReplyKeyboardMarkup(True, True)
		keyboard.row('üìã–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ' )
		bot.send_message(message.chat.id, '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', reply_markup=keyboard)
	elif message.text == 'üë§–ò—â—É —Å–æ—Å–µ–¥–µ–π':
		chat_id = str(message.chat.id)
		'''
		if db.seeker_check_chat_id(chat_id) == True:
			keyboard = types.InlineKeyboardMarkup()
			button = types.InlineKeyboardButton('–ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –∫–≤–∞—Ä—Ç–∏—Ä—ã', callback_data = 'matches_out')
			button = types.InlineKeyboardButton('–ò–∑–º–µ–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∞–Ω–∫–µ—Ç—ã', callback_data = 'change_profile')
			keyboard.add(button)
			button = types.InlineKeyboardButton('–£–¥–∞–ª–∏—Ç—å –∞–Ω–∫–µ—Ç—É', callback_data = 'seeker_delete_true')
			keyboard.add(button)
			bot.send_message(message.chat.id, '–í—ã —É–∂–µ –∑–∞–ø–æ–ª–Ω—è–ª–∏ –∞–Ω–∫–µ—Ç—É', reply_markup = keyboard)
			return
		'''
		#------

		keyboard = types.ReplyKeyboardMarkup(True, False)
		keyboard.row('üîô–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é')
		bot.send_message(message.chat.id, '–ü—Ä–æ—à—É –≤–∞—Å –∑–∞–ø–æ–ª–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É', reply_markup=keyboard)
		time.sleep(1)
		bot.send_message(message.chat.id, '–í–∞—à–∏ –§–ò–û:')
		seeker_st = True
		mode = 1
	elif message.text == 'üè†–ü—Ä–µ–¥–ª–∞–≥–∞—é –∂–∏–ª—å–µ':
		keyboard = types.ReplyKeyboardMarkup(True, True)
		keyboard.row('üõã–Ø –ø—Ä–µ–¥–ª–∞–≥–∞—é –∫–æ–º–Ω–∞—Ç—É', 'üè°–Ø –ø—Ä–µ–¥–ª–∞–≥–∞—é –∂–∏–ª—å–µ —Ü–µ–ª–∏–∫–æ–º')
		keyboard.row('üîô–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é')
		bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ —á—Ç–æ-—Ç–æ –æ–¥–Ω–æ:', reply_markup=keyboard)
	elif message.text == 'üèò–Ø –∏—â—É –∂–∏–ª—å–µ —Ü–µ–ª–∏–∫–æ–º':
		keyboard = types.ReplyKeyboardMarkup(True, False)
		keyboard.row('–ü–æ–∏—Å–∫ –ø–æ —Ü–µ–Ω–µ')
		keyboard.row('–ü–æ–∏—Å–∫ –ø–æ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏—é')
		keyboard.row('üîô–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é')
		seeker_st = False
		flat_num = db.flat_num()
		bot.send_message(message.chat.id, '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–≤–∞—Ä—Ç–∏—Ä: ' + str(flat_num), reply_markup = keyboard)
		keyboard = types.InlineKeyboardMarkup()
		button = types.InlineKeyboardButton('–î–∞', callback_data = 'flat_out')
		keyboard.add(button)
		bot.send_message(message.chat.id, '–ü–æ–∫–∞–∑–∞—Ç—å –∫–≤–∞—Ä—Ç–∏—Ä—É?', reply_markup = keyboard)
	elif message.text == 'üè°–Ø –ø—Ä–µ–¥–ª–∞–≥–∞—é –∂–∏–ª—å–µ —Ü–µ–ª–∏–∫–æ–º' or message.text == 'üõã–Ø –ø—Ä–µ–¥–ª–∞–≥–∞—é –∫–æ–º–Ω–∞—Ç—É':
		keyboard = types.ReplyKeyboardMarkup(True, False)
		keyboard.row('–ê–ª–º–∞—Ç–∏–Ω—Å–∫–∏–π', '–ë–∞–π–∫–æ–Ω—É—Ä—Å–∫–∏–π')
		keyboard.row('–ï—Å–∏–ª—å—Å–∫–∏–π', '–°–∞—Ä—ã–∞—Ä–∫–∏–Ω—Å–∫–∏–π')
		keyboard.row('üîô–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é')
		bot.send_message(message.chat.id, '–í –∫–∞–∫–æ–º —Ä–∞–π–æ–Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤–∞—à–∞ –∫–≤–∞—Ä—Ç–∏—Ä–∞?', reply_markup = keyboard)
		offerer_st = True
		mode = 1
	elif message.text == 'üè°–ü–æ–∫–∞–∑–∞—Ç—å –∫–≤–∞—Ä—Ç–∏—Ä—ã' or message.text == '–ù–∞–∑–∞–¥':
		keyboard = types.ReplyKeyboardMarkup(True, False)
		keyboard.row('–ü–æ–∏—Å–∫ –ø–æ —Ü–µ–Ω–µ')
		keyboard.row('–ü–æ–∏—Å–∫ –ø–æ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏—é')
		keyboard.row('üîô–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é')
		seeker_st = False
		sleep_places_st = False
		flat_num = db.flat_num()
		bot.send_message(message.chat.id, '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–≤–∞—Ä—Ç–∏—Ä: ' + str(flat_num), reply_markup = keyboard)
		keyboard = types.InlineKeyboardMarkup()
		button = types.InlineKeyboardButton('–î–∞', callback_data = 'flat_out')
		keyboard.add(button)
		bot.send_message(message.chat.id, '–ü–æ–∫–∞–∑–∞—Ç—å –∫–≤–∞—Ä—Ç–∏—Ä—É?', reply_markup = keyboard)
	elif message.text == '–ü–æ–∏—Å–∫ –ø–æ —Ü–µ–Ω–µ':
		keyboard = types.InlineKeyboardMarkup()
		button = types.InlineKeyboardButton('–¥–æ 100.000 —Ç–µ–Ω–≥–µ', callback_data = '100')
		keyboard.add(button)
		button = types.InlineKeyboardButton('–¥–æ 150.000 —Ç–µ–Ω–≥–µ', callback_data = '150')
		keyboard.add(button)
		button = types.InlineKeyboardButton('–¥–æ 200.000 —Ç–µ–Ω–≥–µ', callback_data = '200')
		keyboard.add(button)
		button = types.InlineKeyboardButton('–¥–æ 250.000 —Ç–µ–Ω–≥–µ', callback_data = '250')
		keyboard.add(button)
		button = types.InlineKeyboardButton('–¥–æ 300.000 —Ç–µ–Ω–≥–µ', callback_data = '300')
		keyboard.add(button)
		bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ —Ü–µ–Ω—É:', reply_markup=keyboard)
	elif seeker_st == True:	
		if mode == 1:
			seeker.chat_id = message.chat.id
			seeker.name = message.text
			mode = 2
			keyboard = types.ReplyKeyboardMarkup(True, True)
			keyboard.row('–æ—Ç 16 –¥–æ 18', '–æ—Ç 18 –¥–æ 23')
			keyboard.row('–æ—Ç 23 –¥–æ 29', '–æ—Ç 29 –¥–æ 35')
			keyboard.row('–î—Ä—É–≥–æ–µ', 'üîô–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é')
			bot.send_message(message.chat.id, '–ö–∞–∫–æ–π —É –≤–∞—Å –≤–æ–∑—Ä–∞—Å—Ç?', reply_markup = keyboard)
		elif mode == 2:
			if message.text == '–î—Ä—É–≥–æ–µ':
				bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–æ–∑—Ä–∞—Å—Ç. –ü—Ä–æ—à—É –≤–≤–µ—Å—Ç–∏ –≤–∞—Å —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ')
				return
			if message.text == '–æ—Ç 16 –¥–æ 18':
				age = '1618'
			elif message.text == '–æ—Ç 18 –¥–æ 23':
				age = '1823'
			elif message.text == '–æ—Ç 23 –¥–æ 29':
				age = '2329'
			elif message.text == '–æ—Ç 29 –¥–æ 35':
				age = '2935'
			else:
				age = message.text
				if not age.isdigit() or int(age) > 110:
					bot.send_message(message.chat.id, '–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –≤–≤–æ–¥! –í–≤–µ–¥–∏—Ç–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ.')
					return
			seeker.age = int(age)
			mode += 1
			bot.send_message(message.chat.id, '–û—Ç–∫—É–¥–∞ –≤—ã? (–†–µ–≥–∏–æ–Ω)')
		elif mode == 3:
			seeker.homeland = message.text
			mode += 1
			keyboard = types.ReplyKeyboardMarkup(True, False)
			keyboard.row('üë±–ú—É–∂—á–∏–Ω–∞', 'üë©–ñ–µ–Ω—â–∏–Ω–∞')
			keyboard.row('üîô–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é')
			bot.send_message(message.chat.id, '–£–∫–∞–∂–∏—Ç–µ –≤–∞—à –ø–æ–ª', reply_markup = keyboard)
		elif mode == 4:
			if message.text == 'üë±–ú—É–∂—á–∏–Ω–∞':
				seeker.gender = '–ú—É–∂'
			elif message.text == 'üë©–ñ–µ–Ω—â–∏–Ω–∞':
				seeker.gender = '–ñ–µ–Ω'
			else:
				keyboard = types.ReplyKeyboardMarkup(True, False)
				keyboard.row('üë±–ú—É–∂—á–∏–Ω–∞', 'üë©–ñ–µ–Ω—â–∏–Ω–∞')
				keyboard.row('üîô–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é')
				bot.send_message(message.chat.id, '–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –≤–≤–æ–¥! –ü—Ä–æ—à—É –≤–∞—Å –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π', reply_markup = keyboard)
				return
			mode += 1
			keyboard = types.ReplyKeyboardMarkup(True, False)
			keyboard.row('—É—á—É—Å—å', '—Ä–∞–±–æ—Ç–∞—é', '–Ω–µ —É—á—É—Å—å –∏ –Ω–µ —Ä–∞–±–æ—Ç–∞—é')
			keyboard.row('üîô–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é')
			bot.send_message(message.chat.id, '–í—ã —É—á–∏—Ç–µ—Å—å –∏–ª–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç–µ', reply_markup = keyboard)
		elif mode == 5:
			keyboard = types.ReplyKeyboardMarkup(True, False)
			if message.text == '—É—á—É—Å—å':
				seeker.worker_or_student = 'student'
				keyboard.row('üîô–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é')
				keyboard.row('Astana IT University', '–ö–∞–∑–ì–Æ–ê')
				keyboard.row('–ê–≥—Ä–∞—Ä–∫–∞', '–ù–∞–∑–∞—Ä–±–∞–µ–≤ –£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç')
				keyboard.row('–ï–≤—Ä–∞–∑–∏–π—Å–∫–∏–π –ù–£', '–£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç –ê—Å—Ç–∞–Ω—ã')
				keyboard.row('–ú–µ–¥—É–Ω–∏–≤–µ—Ä', '–ö–æ–ª–µ–¥–∂')
				keyboard.row('–î—Ä—É–≥–æ–µ...')
				bot.send_message(message.chat.id, '–ì–¥–µ –≤—ã —É—á–∏—Ç–µ—Å—å?', reply_markup=keyboard)
			elif message.text == '—Ä–∞–±–æ—Ç–∞—é':
				seeker.worker_or_student = 'worker'
				keyboard.row('üîô–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é')
				keyboard.row('–°—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ', '–¢–æ—Ä–≥–æ–≤–ª—è')
				keyboard.row('IT', '–û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ')
				keyboard.row('–ì–æ—Å—Å–ª—É–∂–±–∞', '–†–∞–±–æ—Ç–∞—é –Ω–∞ —Å–µ–±—è')
				keyboard.row('–ß–∞—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–∏—è', '–†–µ—Å—Ç–æ—Ä–∞–Ω—ã/–∫–∞—Ñ–µ')
				keyboard.row('–î—Ä—É–≥–æ–µ...')
				bot.send_message(message.chat.id, '–ö–∞–∫–∞—è —É –≤–∞—Å —Å—Ñ–µ—Ä–∞ –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏?', reply_markup=keyboard)
			elif message.text == '–Ω–µ —É—á—É—Å—å –∏ –Ω–µ —Ä–∞–±–æ—Ç–∞—é':
				seeker.worker_or_student = 'neither'
				mode += 2
				keyboard = types.ReplyKeyboardMarkup(True, False)
				keyboard.row('–ö–∞–∑–∞—Ö—Å–∫–∏–π', '–†—É—Å—Å–∫–∏–π', '–û–±–∞ —è–∑—ã–∫–∞')
				keyboard.row('–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é')
				bot.send_message(message.chat.id, '–£–∫–∞–∂–∏—Ç–µ —è–∑—ã–∫–∏, –Ω–∞ –∫–æ—Ç–æ—Ä—ã—Ö –≤—ã –≥–æ–≤–æ—Ä–∏—Ç–µ:', reply_markup=keyboard)
			else:
				bot.send_message(message.chat.id, '–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –≤–≤–æ–¥!')
				return
			mode += 1
		elif mode == 6:
			status = seeker.worker_or_student
			if message.text == '–î—Ä—É–≥–æ–µ...':
				if status == 'student':
					bot.send_message(message.chat.id, '–ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –º–µ—Å—Ç–∞ –≥–¥–µ –≤—ã —É—á–∏—Ç–µ—Å—å')
				elif status == 'worker':
					bot.send_message(message.chat.id, '–ù–∞–ø–∏—à–∏—Ç–µ —Å—Ñ–µ—Ä—É –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏, –≤ –∫–æ—Ç–æ—Ä–æ–π –≤—ã —Ä–∞–±–æ—Ç–∞–µ—Ç–µ')
			else:
				seeker.study_or_work_place = message.text
				mode += 1
				keyboard = types.ReplyKeyboardMarkup(True, False)
				if status == 'student':
					keyboard.row('–ñ–∞–≤–æ—Ä–æ–Ω–æ–∫', '–°–æ–≤–∞')
					keyboard.row('üîô–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é')
					bot.send_message(message.chat.id, '–ö–∞–∫–æ–π —É –≤–∞—Å —Ä–µ–∂–∏–º?', reply_markup=keyboard)
				elif status == 'worker':
					keyboard.row('–° —É—Ç—Ä–∞ –¥–æ –≤–µ—á–µ—Ä–∞', '–° —É—Ç—Ä–∞')
					keyboard.row('–ù–æ—á—å—é', '–í–∞—Ö—Ç–æ–≤—ã–µ —Å–º–µ–Ω—ã')
					keyboard.row('–î–µ–Ω—å-–ù–æ—á—å', 'üîô–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é')
					bot.send_message(message.chat.id, '–í –∫–∞–∫–æ–µ –≤—Ä–µ–º—è –≤—ã —Ä–∞–±–æ—Ç–∞–µ—Ç–µ?', reply_markup=keyboard)
		elif mode == 7:
			seeker.sleeping_mode = message.text
			mode += 1
			keyboard = types.ReplyKeyboardMarkup(True, False)
			keyboard.row('–ö–∞–∑–∞—Ö—Å–∫–∏–π', '–†—É—Å—Å–∫–∏–π', '–û–±–∞ —è–∑—ã–∫–∞')
			keyboard.row('–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é')
			bot.send_message(message.chat.id, '–£–∫–∞–∂–∏—Ç–µ —è–∑—ã–∫–∏, –Ω–∞ –∫–æ—Ç–æ—Ä—ã—Ö –≤—ã –≥–æ–≤–æ—Ä–∏—Ç–µ:', reply_markup=keyboard)
		elif mode == 8:
			lang = message.text
			if lang == '–ö–∞–∑–∞—Ö—Å–∫–∏–π' or lang == '–†—É—Å—Å–∫–∏–π' or lang == '–û–±–∞ —è–∑—ã–∫–∞': 
				seeker.langs = message.text
				mode += 1
				keyboard = types.ReplyKeyboardMarkup(True, False)
				keyboard.row('–ê–ª–º–∞—Ç–∏–Ω—Å–∫–∏–π', '–ë–∞–π–∫–æ–Ω—É—Ä—Å–∫–∏–π')
				keyboard.row('–ï—Å–∏–ª—å—Å–∫–∏–π', '–°–∞—Ä—ã–∞—Ä–∫–∏–Ω—Å–∫–∏–π')
				keyboard.row('üîô–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é')
				bot.send_message(message.chat.id, '–ñ–µ–ª–∞–µ–º—ã–π —Ä–∞–π–æ–Ω –≥–æ—Ä–æ–¥–∞', reply_markup = keyboard)
			else:
				bot.send_message(message.chat.id, '–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –≤–≤–æ–¥!')
		elif mode == 9:
			distr = message.text
			if distr == '–ê–ª–º–∞—Ç–∏–Ω—Å–∫–∏–π' or distr == '–ë–∞–π–∫–æ–Ω—É—Ä—Å–∫–∏–π' or distr == '–ï—Å–∏–ª—å—Å–∫–∏–π' or distr == '–°–∞—Ä—ã–∞—Ä–∫–∏–Ω—Å–∫–∏–π':
				seeker.distr = message.text
				mode += 1
				keyboard = types.ReplyKeyboardMarkup(True, True)
				keyboard.row('–¥–æ 20.000 —Ç–µ–Ω–≥–µ', '–æ—Ç 20.000 –¥–æ 30.000 —Ç–µ–Ω–≥–µ')
				keyboard.row('–æ—Ç 30.000 –¥–æ 40.000 —Ç–µ–Ω–≥–µ', '–æ—Ç 40.000 –¥–æ 50.000 —Ç–µ–Ω–≥–µ')
				keyboard.row('–≤—ã—à–µ 50.000 —Ç–µ–Ω–≥–µ', 'üîô–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é')
				bot.send_message(message.chat.id, '–ñ–µ–ª–∞—Ç–µ–ª—å–Ω–∞—è —Ü–µ–Ω–∞', reply_markup=keyboard)
			else:
				bot.send_message(message.chat.id, '–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –≤–≤–æ–¥!')
		elif mode == 10:
			seeker.price = message.text
			keyboard = types.ReplyKeyboardMarkup(True, True)
			keyboard.row('–û—Ç–¥–µ–ª—å–Ω—É—é –∫–æ–º–Ω–∞—Ç—É', '–ú–æ–∂–Ω–æ —Å –∫–µ–º-–Ω–∏–±—É–¥—å –≤ –∫–æ–º–Ω–∞—Ç–µ')
			keyboard.row('–û–±–∞ –≤–∞—Ä–∏–∞–Ω—Ç–∞')
			keyboard.row('üîô–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é')
			bot.send_message(message.chat.id, '–Ø –∏—â—É...', reply_markup=keyboard)
			mode += 1
		elif mode == 11:
			seeker.seeking_for = message.text
			mode += 1
			bot.send_message(message.chat.id, '–†–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ —Å–µ–±–µ (–∏–Ω—Ç–µ—Ä–µ—Å—ã, —Ö–æ–±–±–∏, –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—è, –∫–Ω–∏–≥–∏, —Ñ–∏–ª—å–º—ã)')
		elif mode == 12:
			seeker.interest = message.text
			mode += 1
			bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ (–ø—Ä–∏–º–µ—Ä: 8-—Ö—Ö—Ö-—Ö—Ö—Ö-—Ö—Ö-—Ö—Ö)')
		elif mode == 13:
			num = message.text
			digits = 0
			correct = True
			for a in num:
				if a.isdigit():
					digits += 1
				elif a != '-':
					correct = False
			if digits != 11:
				correct = False
			if not correct:
				bot.send_message(message.chat.id, '–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –≤–≤–æ–¥!')
				return
			seeker.phone_num = message.text
			bot.send_message(message.chat.id, '–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ—ë —Å–µ–ª—Ñ–∏')
			mode += 1
		elif mode == 14:
			bot.send_message(message.chat.id, '–ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é')
	elif offerer_st == True:
		if mode == 1:
			distr = message.text
			if distr == '–ê–ª–º–∞—Ç–∏–Ω—Å–∫–∏–π' or distr == '–ë–∞–π–∫–æ–Ω—É—Ä—Å–∫–∏–π' or distr == '–ï—Å–∏–ª—å—Å–∫–∏–π' or distr == '–°–∞—Ä—ã–∞—Ä–∫–∏–Ω—Å–∫–∏–π':
				offerer.distr = message.text
				mode = 2
				keyboard = types.ReplyKeyboardMarkup(True, True)
				keyboard.row('üîô–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é')
				bot.send_message(message.chat.id, '–£–∫–∞–∂–∏—Ç–µ –≤–∞—à —Ç–æ—á–Ω—ã–π –∞–¥—Ä–µ—Å', reply_markup=keyboard)
			else:
				bot.send_message(message.chat.id, '–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –≤–≤–æ–¥!')
		elif mode == 2:
			offerer.chat_id = message.chat.id
			offerer.address = message.text
			mode = 3
			bot.send_message(message.chat.id, '–¶–µ–Ω–∞ –∞—Ä–µ–Ω–¥—ã –≤ —Ç–µ–Ω–≥–µ:')
		elif mode == 3:
			price = message.text
			if price.isdigit() == True:
				offerer.price = int(message.text)
				mode = 4
				bot.send_message(message.chat.id, '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–º–Ω–∞—Ç –≤ –≤–∞—à–µ–π –∫–≤–∞—Ä—Ç–∏—Ä–µ')
			else:
				bot.send_message(message.chat.id, '–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –≤–≤–æ–¥! –í–≤–µ–¥–∏—Ç–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ')
		elif mode == 4:
			room_num = message.text
			if room_num.isdigit() == True:
				offerer.room_num = int(message.text)
				mode = 5
				bot.send_message(message.chat.id, '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ª—é–¥–µ–π –¥–ª—è –∑–∞—Å–µ–ª–µ–Ω–∏—è')
			else:
				bot.send_message(message.chat.id, '–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –≤–≤–æ–¥! –í–≤–µ–¥–∏—Ç–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ')
		elif mode == 5:
			sleep_places = message.text
			if sleep_places.isdigit() == True:
				offerer.sleep_places = int(message.text)
				mode = 6
				bot.send_message(message.chat.id, '–û–ø–∏—Å–∞–Ω–∏–µ –≤–∞—à–µ–π –∫–≤–∞—Ä—Ç–∏—Ä—ã/–∫–æ–º–Ω–∞—Ç—ã (—ç—Ç–∞–∂, –ø–ª–æ—â–∞–¥—å, \
				–∏–Ω—Ç–µ—Ä–Ω–µ—Ç, –º–µ–±–µ–ª—å, –±—ã—Ç–æ–≤–∞—è —Ç–µ—Ö–Ω–∏–∫–∞)')
			else:
				bot.send_message(message.chat.id, '–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –≤–≤–æ–¥! –í–≤–µ–¥–∏—Ç–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ')
		elif mode == 6:
			offerer.description = message.text
			mode = 7
			bot.send_message(message.chat.id, '–í–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:')
		elif mode == 7:
			offerer.phone_num = message.text
			mode += 1
			bot.send_message(message.chat.id, '–ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–æ—Ç–æ –≤–∞—à–µ–π –∫–≤–∞—Ä—Ç–∏—Ä—ã')
		elif mode == 8:
			bot.send_message(message.chat.id, '–ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–æ—Ç–æ!')

@bot.message_handler(content_types = ['photo'])
def upload_photo(message):
	global mode, offerer_st, offerer, seeker, seeker_st, flat_matches
	if offerer_st == True and mode == 8:
		offerer.photo_id.append(photos.document_handler(message, bot))
		print(offerer.photo_id)
		db.offerer_insert(offerer)
		bot.send_message(message.chat.id, '–í–∞—à–∞ –∫–≤–∞—Ä—Ç–∏—Ä–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞!')
		offerer_st = False
		mode = 0
	elif seeker_st == True and mode == 14:
		seeker.photo_id.append(photos.document_handler(message, bot))
		db.seeker_insert(seeker)
		bot.send_message(message.chat.id, '*–ü–æ–¥–±–∏—Ä–∞–µ–º –≤–∞–º –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –∫–≤–∞—Ä—Ç–∏—Ä—ã...*', parse_mode = "Markdown")
		bot.send_chat_action(message.chat.id, 'typing')
		time.sleep(3)
		seeker_st = False
		flat_matches = db.get_matches(seeker)
		keyboard = types.InlineKeyboardMarkup();
		button = types.InlineKeyboardButton('–ü–æ–∫–∞–∑–∞—Ç—å –∫–≤–∞—Ä—Ç–∏—Ä—ã', callback_data = 'matches_out')
		keyboard.add(button)
		bot.send_message(message.chat.id, '–ö–≤–∞—Ä—Ç–∏—Ä—ã –Ω–∞–π–¥–µ–Ω—ã', reply_markup = keyboard)

bot.polling(none_stop = True)