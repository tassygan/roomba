import telebot
import random
import time
import functions
from telebot import types
from database import SQL
from search import Search, Tenant

token = "1012837410:AAFY0lxwBFgWPIbRO-lO_MumXnlYJl-1ReQ"
bot = telebot.TeleBot(token)
db = SQL()
mode = 0
flat_id = 1
cur_flat = 0
search = Search()
tenant = Tenant()
flat_matches = ""

search_st = False
sleep_places_st = False
tenant_st = False

@bot.message_handler(commands = ['start'])
def start(message):
	keyboard = types.ReplyKeyboardMarkup(True, True)
	keyboard.row('üè°–ü–æ–∫–∞–∑–∞—Ç—å –∫–≤–∞—Ä—Ç–∏—Ä—ã', 'üìã–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ')
	bot.send_message(message.chat.id, 'roomba - H–∞–π–¥–∏ —Ç–æ–≥–æ —Å–∞–º–æ–≥–æ —Å–æ—Å–µ–¥–∞!\n\n'
	'@rroomba —ç—Ç–æ:\n\n'
	'- –ø–æ–∏—Å–∫ —Å–æ—Å–µ–¥–µ–π –ø–æ –∏–Ω—Ç–µ—Ä–µ—Å–∞–º\n'
	'- –∞—Ä–µ–Ω–¥–∞ –∫–æ–º–Ω–∞—Ç/–∫–≤–∞—Ä—Ç–∏—Ä\n'
	'- –≤–∑—è—Ç—å –Ω–∞ –ø–æ–¥—Å–µ–ª–µ–Ω–∏–µ\n'
	'- –ø–æ–∏—Å–∫ –∫–æ–º–ø–∞–Ω—å–æ–Ω–∞ –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–Ω–æ–π –∞—Ä–µ–Ω–¥—ã\n\n'
	'–°–æ—Å–µ–¥—Å—Ç–≤–æ –≤ —Å—Ç–∏–ª–µ "–†—É–º–±–∞"!\n\n'
	'–î–ª—è –ø–æ–¥–∞—á–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏—è –ø–∏—à–∏—Ç–µ –Ω–∞: @rroomba_info\n'
	'–ü—Ä–∞–≤–∏–ª–∞ —Ä–∞–∑–º–µ—â–µ–Ω–∏—è –ø–æ —Å—Å—ã–ª–∫–µ: @rroomba_rules\n\n'
	'–ù–∞–≤–∏–≥–∞—Ü–∏—è:\n'
	'- –ø–æ –æ–±—ä—è–≤–ª–µ–Ω–∏—è–º #–∏—â—É–∂–∏–ª—å–µ #–≤–æ–∑—å–º—É–∫—Å–µ–±–µ #—Å–¥–∞–º–∫–≤\n'
	'- –ø–æ –ø–æ–ª—É #–¥–µ–≤—É—à–∫–∞ #–ø–∞—Ä–µ–Ω—å #—Å–µ–º—å—è\n'
	'- –ø–æ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏ #–µ—Å–∏–ª—å—Å–∫–∏–π #c–∞—Ä—ã–∞—Ä–∫–∏–Ω—Å–∫–∏–π #–∞–ª–º–∞—Ç–∏–Ω—Å–∫–∏–π #–±–∞–π–∫–æ–Ω—É—Ä—Å–∫–∏–π\n', reply_markup=keyboard)

	#bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:', reply_markup = keyboard)

@bot.callback_query_handler(func=lambda call:True)
def callback(call):
	global mode, search_st, tenant_st, flat_id, flat_matches, cur_flat, sleep_places_st
	if call.message:
		if call.data == 'flat_out' or call.data == 'flat_prev':
			bot.delete_message(call.message.chat.id, call.message.message_id)
			if call.data == 'flat_prev':
				flat_id -= 2
			flat = db.flat_out(flat_id)
			flat_id += 1
			keyboard = types.InlineKeyboardMarkup()
			if flat_id <= db.flat_num():
				button = types.InlineKeyboardButton('–°–ª–µ–¥—É—é—â–∞—è –∫–≤–∞—Ä—Ç–∏—Ä–∞ >>', callback_data = 'flat_out')
				keyboard.add(button)
			if flat_id > 2:
				button = types.InlineKeyboardButton('<< –ü—Ä–µ–¥—ã–¥—É—â–∞—è –∫–≤–∞—Ä—Ç–∏—Ä–∞', callback_data = 'flat_prev')
				keyboard.add(button)
			bot.send_message(call.message.chat.id, '*–†–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ –∫–≤–∞—Ä—Ç–∏—Ä—ã:* '+ flat[1] + ' —Ä–∞–π–æ–Ω, ' + flat[2] + '\n' + \
			 '*–¶–µ–Ω–∞ –∞—Ä–µ–Ω–¥—ã:* '+ str(flat[3]) + '\n' + '*–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–º–Ω–∞—Ç:* ' + str(flat[4]) + '\n' + \
			 '*–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ø–∞–ª—å–Ω—ã—Ö –º–µ—Å—Ç:* ' + str(flat[5]) + '\n' + '*–û–ø–∏—Å–∞–Ω–∏–µ:* '+ flat[6] + '\n' + \
			 '*–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:* ' + flat[7], reply_markup = keyboard, parse_mode = 'Markdown')
			'''
			for photo_id in flat[5]:
				photo_id += '.jpg'
				img = open(photo_id, 'rb')
				bot.send_photo(call.message.chat.id, img)
			'''
		elif call.data == 'matches_out' or call.data == 'matches_out_prev':
			bot.delete_message(call.message.chat.id, call.message.message_id)
			if call.data == 'matches_out_prev':
				cur_flat -= 2
			flat = flat_matches[cur_flat]
			cur_flat += 1
			keyboard = types.InlineKeyboardMarkup()
			if cur_flat + 1 <= len(flat_matches):
				button = types.InlineKeyboardButton('–°–ª–µ–¥—É—é—â–∞—è –∫–≤–∞—Ä—Ç–∏—Ä–∞ >>', callback_data = 'matches_out')
				keyboard.add(button)
			if cur_flat > 1:
				button = types.InlineKeyboardButton('<< –ü—Ä–µ–¥—ã–¥—É—â–∞—è –∫–≤–∞—Ä—Ç–∏—Ä–∞', callback_data = 'matches_out_prev')
				keyboard.add(button)
			book_st = db.check_book(call.message.chat.id, flat_matches[cur_flat-1][0])
			if book_st == False:
				button = types.InlineKeyboardButton('–ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å –∫–≤–∞—Ä—Ç–∏—Ä—É', callback_data = 'book_flat')
				keyboard.add(button)
			bot.send_message(call.message.chat.id, '*–†–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ –∫–≤–∞—Ä—Ç–∏—Ä—ã:* '+ flat[1] + ' —Ä–∞–π–æ–Ω, ' + flat[2] + '\n' + \
			 '*–¶–µ–Ω–∞ –∞—Ä–µ–Ω–¥—ã:* '+ str(flat[3]) + '\n' + '*–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–º–Ω–∞—Ç:* ' + str(flat[4]) + '\n' + \
			 '*–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ø–∞–ª—å–Ω—ã—Ö –º–µ—Å—Ç:* ' + str(flat[5]) + '\n' + '*–°—Ç–æ–∏–º–æ—Å—Ç—å –∞—Ä–µ–Ω–¥—ã –Ω–∞ –æ–¥–Ω–æ–≥–æ —á–µ–ª–æ–≤–µ–∫–∞:*' + str(int(flat[3]/flat[5])) + \
			 '\n' + '*–û–ø–∏—Å–∞–Ω–∏–µ:* '+ flat[6] + '\n' + '*–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:* ' + flat[7] + '\n' + '*–ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–æ —á–µ–ª–æ–≤–µ–∫–æ–º: *' + str(flat[8]), \
			 reply_markup = keyboard, parse_mode = 'Markdown')
		elif call.data == 'book_flat':
			db.book_flat(call.message.chat.id, flat_matches[cur_flat-1][0])
			if flat_matches[cur_flat-1][8] == 0:
				bot.send_message(flat_matches[cur_flat-1][10], '–í–∞—à–∞ –∫–≤–∞—Ä—Ç–∏—Ä–∞ –±—ã–ª–∞ –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∞ –æ–¥–Ω–∏–º —á–µ–ª–æ–≤–µ–∫–æ–º!')
			else:
				bot.send_message(flat_matches[cur_flat-1][10], '–í–∞—à–∞ –∫–≤–∞—Ä—Ç–∏—Ä–∞ –±—ã–ª–∞ –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∞ –µ—â–µ –æ–¥–Ω–∏–º —á–µ–ª–æ–≤–µ–∫–æ–º!')
			bot.edit_message_text(chat_id = call.message.chat.id,message_id = call.message.message_id, text = '–ö–≤–∞—Ä—Ç–∏—Ä–∞ —É—Å–ø–µ—à–Ω–æ –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∞!')
		elif call.data == 'search_delete_true':
			db.search_delete(str(call.message.chat.id))
			bot.send_message(call.message.chat.id, '–í–∞—à–∞ –∞–Ω–∫–µ—Ç–∞ —É–¥–∞–ª–µ–Ω–∞')
		elif call.data == '100' or '150' or '200' or '250' or '300':
			filter_price = int(call.data)*1000;



@bot.message_handler(content_types = ['text'])
def name_insert_data(message):
	global search, mode, search_st, tenant_st, flat_matches, cur_flat, sleep_places_st
	if message.text == 'üìã–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ':
		keyboard = types.ReplyKeyboardMarkup(True, True)
		keyboard.row('üè†–ñ–∏–ª—å–µ','üë§–õ—é–¥–µ–π –¥–ª—è –∑–∞—Å–µ–ª–µ–Ω–∏—è')
		keyboard.row('üîô–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é')
		bot.send_message(message.chat.id, '–ß—Ç–æ –≤—ã –∏—â–µ—Ç–µ?', reply_markup = keyboard)
	elif message.text == 'üîô–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é':
		search_st = tenant_st = sleep_places_st = mode = 0
		keyboard = types.ReplyKeyboardMarkup(True, True)
		keyboard.row('üè°–ü–æ–∫–∞–∑–∞—Ç—å –∫–≤–∞—Ä—Ç–∏—Ä—ã', 'üìã–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ' )
		bot.send_message(message.chat.id, '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', reply_markup=keyboard)
	elif message.text == 'üè†–ñ–∏–ª—å–µ':
		keyboard = types.ReplyKeyboardMarkup(True, True)
		keyboard.row('üõã–Ø –∏—â—É —Å–ø–∞–ª—å–Ω–æ–µ –º–µ—Å—Ç–æ', 'üèò–Ø –∏—â—É –∂–∏–ª—å–µ —Ü–µ–ª–∏–∫–æ–º')
		keyboard.row('üîô–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é')
		bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ —á—Ç–æ-—Ç–æ –æ–¥–Ω–æ:', reply_markup=keyboard)
	elif message.text == 'üë§–õ—é–¥–µ–π –¥–ª—è –∑–∞—Å–µ–ª–µ–Ω–∏—è':
		keyboard = types.ReplyKeyboardMarkup(True, True)
		keyboard.row('üõã–Ø –ø—Ä–µ–¥–ª–∞–≥–∞—é –∫–æ–º–Ω–∞—Ç—É', 'üè°–Ø –ø—Ä–µ–¥–ª–∞–≥–∞—é –∂–∏–ª—å–µ —Ü–µ–ª–∏–∫–æ–º')
		keyboard.row('üîô–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é')
		bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ —á—Ç–æ-—Ç–æ –æ–¥–Ω–æ:', reply_markup=keyboard)
	elif message.text == '–Ø –∏—â—É –∫–æ–º–Ω–∞—Ç—É' or message.text == 'üõã–Ø –∏—â—É —Å–ø–∞–ª—å–Ω–æ–µ –º–µ—Å—Ç–æ':
		chat_id = str(message.chat.id)
		'''
		if db.search_check_chat_id(chat_id) == True:
			bot.send_message(message.chat.id, '–í—ã —É–∂–µ –∑–∞–ø–æ–ª–Ω—è–ª–∏ –∞–Ω–∫–µ—Ç—É')
			keyboard = types.InlineKeyboardMarkup()
			button1 = types.InlineKeyboardButton('–î–∞', callback_data = 'search_delete_true') 
			button2 = types.InlineKeyboardButton('–ù–µ—Ç', callback_data = 'search_delete_false')
			keyboard.add(button1)
			keyboard.add(button2)
			bot.send_message(message.chat.id, '–•–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –≤–∞—à—É –∞–Ω–∫–µ—Ç—É?', reply_markup = keyboard)
			return
		'''
		keyboard = types.ReplyKeyboardMarkup(True, False)
		keyboard.row('üîô–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é')
		bot.send_message(message.chat.id, '–ü—Ä–æ—à—É –≤–∞—Å –∑–∞–ø–æ–ª–Ω–∏—Ç—å –∞–Ω–∫–µ—Ç—É', reply_markup=keyboard)
		time.sleep(1)
		bot.send_message(message.chat.id, '–í–∞—à–∏ –§–ò–û:')
		if message.text == '–Ø –∏—â—É –∫–æ–º–Ω–∞—Ç—É':
			search_st = True
		else:
			sleep_places_st = True
		mode = 1
	elif message.text == 'üèò–Ø –∏—â—É –∂–∏–ª—å–µ —Ü–µ–ª–∏–∫–æ–º':
		keyboard = types.ReplyKeyboardMarkup(True, False)
		keyboard.row('–ü–æ–∏—Å–∫ –ø–æ —Ü–µ–Ω–µ')
		keyboard.row('–ü–æ–∏—Å–∫ –ø–æ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏—é')
		keyboard.row('üîô–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é')
		search_st = False
		flat_num = db.flat_num()
		bot.send_message(message.chat.id, '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–≤–∞—Ä—Ç–∏—Ä: ' + str(flat_num), reply_markup = keyboard)
		keyboard = types.InlineKeyboardMarkup()
		button = types.InlineKeyboardButton('–î–∞', callback_data = 'flat_out')
		keyboard.add(button)
		bot.send_message(message.chat.id, '–ü–æ–∫–∞–∑–∞—Ç—å –∫–≤–∞—Ä—Ç–∏—Ä—É?', reply_markup = keyboard)
	elif message.text == 'üè°–Ø –ø—Ä–µ–¥–ª–∞–≥–∞—é –∂–∏–ª—å–µ —Ü–µ–ª–∏–∫–æ–º' or message.text == 'üõã–Ø –ø—Ä–µ–¥–ª–∞–≥–∞—é –∫–æ–º–Ω–∞—Ç—É':
		keyboard = types.ReplyKeyboardMarkup(True, False)
		keyboard.row('–ê–ª–º–∞—Ç–∏–Ω—Å–∫–∏–π', '–ë–∞–π–∫–æ–Ω—É—Ä—Å–∫–∏–π')
		keyboard.row('–ï—Å–∏–ª—å—Å–∫–∏–π', '–°–∞—Ä—ã–∞—Ä–∫–∏–Ω—Å–∫–∏–π')
		keyboard.row('üîô–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é')
		bot.send_message(message.chat.id, '–í –∫–∞–∫–æ–º —Ä–∞–π–æ–Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤–∞—à–∞ –∫–≤–∞—Ä—Ç–∏—Ä–∞?', reply_markup = keyboard)
		tenant_st = True
		mode = 1
	elif message.text == 'üè°–ü–æ–∫–∞–∑–∞—Ç—å –∫–≤–∞—Ä—Ç–∏—Ä—ã' or message.text == '–ù–∞–∑–∞–¥':
		keyboard = types.ReplyKeyboardMarkup(True, False)
		keyboard.row('–ü–æ–∏—Å–∫ –ø–æ —Ü–µ–Ω–µ')
		keyboard.row('–ü–æ–∏—Å–∫ –ø–æ —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏—é')
		keyboard.row('üîô–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é')
		search_st = False
		sleep_places_st = False
		flat_num = db.flat_num()
		bot.send_message(message.chat.id, '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–≤–∞—Ä—Ç–∏—Ä: ' + str(flat_num), reply_markup = keyboard)
		keyboard = types.InlineKeyboardMarkup()
		button = types.InlineKeyboardButton('–î–∞', callback_data = 'flat_out')
		keyboard.add(button)
		bot.send_message(message.chat.id, '–ü–æ–∫–∞–∑–∞—Ç—å –∫–≤–∞—Ä—Ç–∏—Ä—É?', reply_markup = keyboard)
	elif message.text == '–ü–æ–∏—Å–∫ –ø–æ —Ü–µ–Ω–µ':
		keyboard = types.InlineKeyboardMarkup()
		button = types.InlineKeyboardButton('–¥–æ 100.000 —Ç–µ–Ω–≥–µ', callback_data = '100')
		keyboard.add(button)
		button = types.InlineKeyboardButton('–¥–æ 150.000 —Ç–µ–Ω–≥–µ', callback_data = '150')
		keyboard.add(button)
		button = types.InlineKeyboardButton('–¥–æ 200.000 —Ç–µ–Ω–≥–µ', callback_data = '200')
		keyboard.add(button)
		button = types.InlineKeyboardButton('–¥–æ 250.000 —Ç–µ–Ω–≥–µ', callback_data = '250')
		keyboard.add(button)
		button = types.InlineKeyboardButton('–¥–æ 300.000 —Ç–µ–Ω–≥–µ', callback_data = '300')
		keyboard.add(button)
		bot.send_message(message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ —Ü–µ–Ω—É:', reply_markup=keyboard)
	elif search_st == True or sleep_places_st == True:	
		if mode == 1:
			search.chat_id = message.chat.id
			search.name = message.text
			mode = 2
			bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–æ–∑—Ä–∞—Å—Ç:')
		elif mode == 2: 
			age = message.text
			if age.isdigit() == True:
				search.age = int(message.text)
				mode = 3
				bot.send_message(message.chat.id, '–£–∫–∞–∂–∏—Ç–µ –≤–∞—à—É —Å—Ñ–µ—Ä—É –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏:')
			else:
				bot.send_message(message.chat.id, '–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –≤–≤–æ–¥! –í–≤–µ–¥–∏—Ç–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ.')
		elif mode == 3: 
			search.sphere = message.text
			mode = 4
			keyboard = types.ReplyKeyboardMarkup(True, False)
			keyboard.row('–ö–∞–∑–∞—Ö—Å–∫–∏–π', '–†—É—Å—Å–∫–∏–π', '–û–±–∞ —è–∑—ã–∫–∞')
			keyboard.row('–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é')
			bot.send_message(message.chat.id, '–£–∫–∞–∂–∏—Ç–µ —è–∑—ã–∫–∏, –Ω–∞ –∫–æ—Ç–æ—Ä—ã—Ö –≤—ã –≥–æ–≤–æ—Ä–∏—Ç–µ:', reply_markup=keyboard)
		elif mode == 4:
			lang = message.text
			if lang == '–ö–∞–∑–∞—Ö—Å–∫–∏–π' or lang == '–†—É—Å—Å–∫–∏–π' or lang == '–û–±–∞ —è–∑—ã–∫–∞': 
				search.langs = message.text
				mode = 5
				keyboard = types.ReplyKeyboardMarkup(True, True)
				keyboard.row('üîô–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é')
				bot.send_message(message.chat.id, '–í–∞—à–∏ –∏–Ω—Ç–µ—Ä–µ—Å—ã, —Ö–æ–±–±–∏, –ª—é–±–∏–º—ã–µ –∫–Ω–∏–≥–∏ –∏ —Ñ–∏–ª—å–º—ã', reply_markup=keyboard)
			else:
				bot.send_message(message.chat.id, '–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –≤–≤–æ–¥!')
		elif mode == 5: 
			search.interest = message.text
			mode = 6
			keyboard = types.ReplyKeyboardMarkup(True, False)
			keyboard.row('–ê–ª–º–∞—Ç–∏–Ω—Å–∫–∏–π', '–ë–∞–π–∫–æ–Ω—É—Ä—Å–∫–∏–π')
			keyboard.row('–ï—Å–∏–ª—å—Å–∫–∏–π', '–°–∞—Ä—ã–∞—Ä–∫–∏–Ω—Å–∫–∏–π')
			keyboard.row('üîô–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é')
			bot.send_message(message.chat.id, '–ñ–µ–ª–∞–µ–º—ã–π —Ä–∞–π–æ–Ω –≥–æ—Ä–æ–¥–∞', reply_markup = keyboard)
		elif mode == 6: 
			distr = message.text
			if distr == '–ê–ª–º–∞—Ç–∏–Ω—Å–∫–∏–π' or distr == '–ë–∞–π–∫–æ–Ω—É—Ä—Å–∫–∏–π' or distr == '–ï—Å–∏–ª—å—Å–∫–∏–π' or distr == '–°–∞—Ä—ã–∞—Ä–∫–∏–Ω—Å–∫–∏–π':
				search.distr = message.text
				mode = 7
				keyboard = types.ReplyKeyboardMarkup(True, True)
				keyboard.row('üîô–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é')
				bot.send_message(message.chat.id, '–ñ–µ–ª–∞—Ç–µ–ª—å–Ω–∞—è —Ü–µ–Ω–∞ (—Ç–µ–Ω–≥–µ)', reply_markup=keyboard)
			else:
				bot.send_message(message.chat.id, '–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –≤–≤–æ–¥!')
		elif mode == 7:
			price = message.text
			if price.isdigit() == True: 
				search.price = int(message.text)
				mode = 8
				bot.send_message(message.chat.id, '–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ –∫–≤–∞—Ä—Ç–∏—Ä–µ')
			else:
				bot.send_message(message.chat.id, '–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –≤–≤–æ–¥! –í–≤–µ–¥–∏—Ç–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ.')
		elif mode == 8:
			search.require = message.text
			mode = 9
			bot.send_message(message.chat.id, '–í–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:')
		elif mode == 9:
			search.phone_num = message.text
			if search_st == True:
				db.search_insert(search)
			else:
				db.sleep_insert(search)
			bot.send_message(message.chat.id, '*–ü–æ–¥–±–∏—Ä–∞–µ–º –≤–∞–º –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –∫–≤–∞—Ä—Ç–∏—Ä—ã...*', parse_mode = "Markdown")
			bot.send_chat_action(message.chat.id, 'typing')
			time.sleep(3)
			search_st = sleep_places_st = False
			flat_matches = db.get_matches(search)
			keyboard = types.InlineKeyboardMarkup();
			button = types.InlineKeyboardButton('–ü–æ–∫–∞–∑–∞—Ç—å –∫–≤–∞—Ä—Ç–∏—Ä—ã', callback_data = 'matches_out')
			keyboard.add(button)
			bot.send_message(message.chat.id, '–ö–≤–∞—Ä—Ç–∏—Ä—ã –Ω–∞–π–¥–µ–Ω—ã', reply_markup = keyboard)
	elif tenant_st == True:
		if mode == 1:
			distr = message.text
			if distr == '–ê–ª–º–∞—Ç–∏–Ω—Å–∫–∏–π' or distr == '–ë–∞–π–∫–æ–Ω—É—Ä—Å–∫–∏–π' or distr == '–ï—Å–∏–ª—å—Å–∫–∏–π' or distr == '–°–∞—Ä—ã–∞—Ä–∫–∏–Ω—Å–∫–∏–π':
				tenant.distr = message.text
				mode = 2
				keyboard = types.ReplyKeyboardMarkup(True, True)
				keyboard.row('üîô–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é')
				bot.send_message(message.chat.id, '–£–∫–∞–∂–∏—Ç–µ –≤–∞—à —Ç–æ—á–Ω—ã–π –∞–¥—Ä–µ—Å', reply_markup=keyboard)
			else:
				bot.send_message(message.chat.id, '–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –≤–≤–æ–¥!')
		elif mode == 2:
			tenant.chat_id = message.chat.id
			tenant.address = message.text
			mode = 3
			bot.send_message(message.chat.id, '–¶–µ–Ω–∞ –∞—Ä–µ–Ω–¥—ã –≤ —Ç–µ–Ω–≥–µ:')
		elif mode == 3:
			price = message.text
			if price.isdigit() == True:
				tenant.price = int(message.text)
				mode = 4
				bot.send_message(message.chat.id, '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–º–Ω–∞—Ç –≤ –≤–∞—à–µ–π –∫–≤–∞—Ä—Ç–∏—Ä–µ')
			else:
				bot.send_message(message.chat.id, '–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –≤–≤–æ–¥! –í–≤–µ–¥–∏—Ç–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ')
		elif mode == 4:
			room_num = message.text
			if room_num.isdigit() == True:
				tenant.room_num = int(message.text)
				mode = 5
				bot.send_message(message.chat.id, '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ª—é–¥–µ–π –¥–ª—è –∑–∞—Å–µ–ª–µ–Ω–∏—è')
			else:
				bot.send_message(message.chat.id, '–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –≤–≤–æ–¥! –í–≤–µ–¥–∏—Ç–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ')
		elif mode == 5:
			sleep_places = message.text
			if sleep_places.isdigit() == True:
				tenant.sleep_places = int(message.text)
				mode = 6
				bot.send_message(message.chat.id, '–û–ø–∏—Å–∞–Ω–∏–µ –≤–∞—à–µ–π –∫–≤–∞—Ä—Ç–∏—Ä—ã/–∫–æ–º–Ω–∞—Ç—ã (—ç—Ç–∞–∂, –ø–ª–æ—â–∞–¥—å, \
				–∏–Ω—Ç–µ—Ä–Ω–µ—Ç, –º–µ–±–µ–ª—å, –±—ã—Ç–æ–≤–∞—è —Ç–µ—Ö–Ω–∏–∫–∞)')
			else:
				bot.send_message(message.chat.id, '–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –≤–≤–æ–¥! –í–≤–µ–¥–∏—Ç–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ')
		elif mode == 6:
			tenant.description = message.text
			mode = 7
			bot.send_message(message.chat.id, '–í–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:')
		elif mode == 7:
			tenant.phone_num = message.text
			db.tenant_insert(tenant)
			bot.send_message(message.chat.id, '–í–∞—à–∞ –∫–≤–∞—Ä—Ç–∏—Ä–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞!')
			tenant_st = False
			mode = 0

bot.polling(none_stop = True)